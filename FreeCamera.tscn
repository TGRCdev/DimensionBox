[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Camera

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"

export var moveSpeed = 10;
export var rotateSpeed = 5;
export var maintainYAxis = true;

export var clampYLook = true;
export var maxYAngle = 89;

var mouse_enabled = true setget set_mouse_enabled, get_mouse_enabled;

var rotateDelta = 0;

func set_mouse_enabled(value : bool):
	if OS.get_name() != \"HTML5\":
		mouse_enabled = value;
		Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE if mouse_enabled else Input.MOUSE_MODE_CAPTURED);
	else:
		mouse_enabled = true;

func get_mouse_enabled():
	return mouse_enabled;

func _process(delta):
	rotateDelta = delta;
	var moveDir = Vector3();
	var rotAmt = Vector2();

	if Input.is_action_just_pressed(\"toggle_mouse\"):
		set_mouse_enabled(not mouse_enabled);

	if(not get_mouse_enabled()):
		if(Input.is_action_pressed(\"move_forward\")):
			moveDir += Vector3(0, 0, -1);
		if(Input.is_action_pressed(\"move_backward\")):
			moveDir += Vector3(0, 0, 1);
		if(Input.is_action_pressed(\"move_right\")):
			moveDir += Vector3(1, 0, 0);
		if(Input.is_action_pressed(\"move_left\")):
			moveDir += Vector3(-1, 0, 0);
		if(Input.is_action_pressed(\"jump\")):
			moveDir += Vector3(0, 1, 0);
		if(Input.is_action_pressed(\"crouch\")):
			moveDir += Vector3(0, -1, 0);

		rotAmt = Input.get_last_mouse_speed();
	if(maintainYAxis):
		var vert = moveDir.y;
		moveDir.y = 0;
		self.translate(moveDir * moveSpeed * delta);
		self.transform.origin.y += vert * moveSpeed * delta;
	else:
		self.translate(moveDir * moveSpeed * delta);

func _unhandled_input(event):
	if get_mouse_enabled(): return;

	if event is InputEventMouseMotion:
		if(maintainYAxis):
			self.rotate_y(deg2rad((event.relative.x * -1) * rotateSpeed * rotateDelta));
			if(clampYLook):
				self.rotation.x = clamp(self.rotation.x + deg2rad(((event.relative.y * -1) * rotateSpeed * rotateDelta)), -deg2rad(maxYAngle), deg2rad(maxYAngle));
			else:
				self.rotate(self.get_transform().basis.x.normalized(), deg2rad((event.relative.y * -1) * rotateSpeed * rotateDelta));
		else:
			self.rotate(self.get_transform().basis.y.normalized(), deg2rad((event.relative.x * -1) * rotateSpeed * rotateDelta));
			self.rotate(self.get_transform().basis.x.normalized(), deg2rad((event.relative.y * -1) * rotateSpeed * rotateDelta));

"

[node name="MainCamera" type="Camera"]
script = SubResource( 1 )
